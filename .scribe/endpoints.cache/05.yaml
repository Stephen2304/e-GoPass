## Autogenerated by Scribe. DO NOT MODIFY.

name: Voyageurs
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/voyageurs
    metadata:
      groupName: Voyageurs
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Liste des voyageurs'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/voyageurs
    metadata:
      groupName: Voyageurs
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Créer un nouveau voyageur'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      type_vol:
        name: type_vol
        description: 'Must not be greater than 255 characters.'
        required: true
        example: b
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      numero_eGoPASS:
        name: numero_eGoPASS
        description: ''
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      nom:
        name: nom
        description: 'Must not be greater than 255 characters.'
        required: true
        example: 'n'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      prenom:
        name: prenom
        description: 'Must not be greater than 255 characters.'
        required: true
        example: g
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      post_nom:
        name: post_nom
        description: 'Must not be greater than 255 characters.'
        required: true
        example: z
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      nationalite:
        name: nationalite
        description: 'Must not be greater than 255 characters.'
        required: true
        example: m
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      numero_passport:
        name: numero_passport
        description: ''
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      compagnie_aerienne:
        name: compagnie_aerienne
        description: 'Must not be greater than 255 characters.'
        required: true
        example: 'n'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      numero_vol:
        name: numero_vol
        description: 'Must not be greater than 255 characters.'
        required: true
        example: g
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      provenance:
        name: provenance
        description: 'Must not be greater than 255 characters.'
        required: true
        example: z
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      destination:
        name: destination
        description: 'Must not be greater than 255 characters.'
        required: true
        example: m
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      telephone:
        name: telephone
        description: 'Must not be greater than 15 characters.'
        required: true
        example: i
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      adresse_mail:
        name: adresse_mail
        description: 'Must be a valid email address. Must not be greater than 255 characters.'
        required: true
        example: 'y'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      adresse_residence:
        name: adresse_residence
        description: 'Must not be greater than 255 characters.'
        required: true
        example: v
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      type_vol: b
      numero_eGoPASS: 16
      nom: 'n'
      prenom: g
      post_nom: z
      nationalite: m
      numero_passport: 16
      compagnie_aerienne: 'n'
      numero_vol: g
      provenance: z
      destination: m
      telephone: i
      adresse_mail: 'y'
      adresse_residence: v
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/voyageurs/{id}'
    metadata:
      groupName: Voyageurs
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Afficher un voyageur'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the voyageur.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/voyageurs/{id}'
    metadata:
      groupName: Voyageurs
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Mettre à jour un voyageur'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the voyageur.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      type_vol:
        name: type_vol
        description: 'Must not be greater than 255 characters.'
        required: true
        example: b
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      numero_eGoPASS:
        name: numero_eGoPASS
        description: ''
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      nom:
        name: nom
        description: 'Must not be greater than 255 characters.'
        required: true
        example: 'n'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      prenom:
        name: prenom
        description: 'Must not be greater than 255 characters.'
        required: true
        example: g
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      post_nom:
        name: post_nom
        description: 'Must not be greater than 255 characters.'
        required: true
        example: z
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      nationalite:
        name: nationalite
        description: 'Must not be greater than 255 characters.'
        required: true
        example: m
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      numero_passport:
        name: numero_passport
        description: ''
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      compagnie_aerienne:
        name: compagnie_aerienne
        description: 'Must not be greater than 255 characters.'
        required: true
        example: 'n'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      numero_vol:
        name: numero_vol
        description: 'Must not be greater than 255 characters.'
        required: true
        example: g
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      provenance:
        name: provenance
        description: 'Must not be greater than 255 characters.'
        required: true
        example: z
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      destination:
        name: destination
        description: 'Must not be greater than 255 characters.'
        required: true
        example: m
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      telephone:
        name: telephone
        description: 'Must not be greater than 15 characters.'
        required: true
        example: i
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      adresse_mail:
        name: adresse_mail
        description: 'Must be a valid email address. Must not be greater than 255 characters.'
        required: true
        example: 'y'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      adresse_residence:
        name: adresse_residence
        description: 'Must not be greater than 255 characters.'
        required: true
        example: v
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      type_vol: b
      numero_eGoPASS: 16
      nom: 'n'
      prenom: g
      post_nom: z
      nationalite: m
      numero_passport: 16
      compagnie_aerienne: 'n'
      numero_vol: g
      provenance: z
      destination: m
      telephone: i
      adresse_mail: 'y'
      adresse_residence: v
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/voyageurs/{id}'
    metadata:
      groupName: Voyageurs
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Supprimer un voyageur'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the voyageur.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/voyageurs/{id}/download'
    metadata:
      groupName: Voyageurs
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: "Télécharger le PDF d'un voyageur"
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the voyageur.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
